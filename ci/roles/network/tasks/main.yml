---
- name: Create network - generic
  openstack.cloud.network:
     cloud: "{{ cloud }}"
     name: "{{ network_name }}"
     state: present
     shared: "{{ network_shared }}"
     external: "{{ network_external }}"

- name: Gather networks info - generic
  openstack.cloud.networks_info:
     cloud: "{{ cloud }}"
     name: "{{ network_name }}"
     filters:
       shared: "{{ network_shared|string|capitalize }}"
  register: result

- name: Verify networks info - generic
  assert:
    that:
      - result.openstack_networks.0.name == network_name
      - (result.openstack_networks.0.shared|lower) == (network_shared|lower)
      - result.openstack_networks[0]['router:external'] == {{ network_external }}

- name: Create network - with new SDK params
  openstack.cloud.network:
     cloud: "{{ cloud }}"
     name: "{{ network_name_newparams }}"
     state: present
     shared: "{{ network_shared }}"
     external: "{{ network_external }}"
     mtu: "{{ mtu }}"
     port_security_enabled: "{{ port_security_enabled }}"
  register: result_create_nw_with_new_params
  ignore_errors: yes

- name: Check errors below min sdk version - with new SDK params
  assert:
    that:
      - result_create_nw_with_new_params.failed
      - '"the installed version of the openstacksdk library MUST be >=0.18.0." in result_create_nw_with_new_params.msg'
  when: sdk_version is version('0.18', '<')

- name: Gather networks info - with new SDK params
  openstack.cloud.networks_info:
     cloud: "{{ cloud }}"
     name: "{{ network_name_newparams }}"
  register: result_newparams
  when: sdk_version is version('0.18', '>=')

- name: Verify networks info - with new SDK params
  assert:
    that:
      - result_newparams.openstack_networks.0.name == network_name_newparams
      - result_newparams.openstack_networks.0.mtu == mtu
      - result_newparams.openstack_networks.0.port_security_enabled == port_security_enabled
  when: sdk_version is version('0.18', '>=')

- name: Delete network - generic and with new SDK params
  openstack.cloud.network:
     cloud: "{{ cloud }}"
     name: "{{ item }}"
     state: absent
  with_items:
      - "{{ network_name }}"
      - "{{ network_name_newparams }}"

- name: Gather networks info - deleted
  openstack.cloud.networks_info:
     cloud: "{{ cloud }}"
     name: "{{ network_name }}"
  register: result_nonet

- name: Verify networks info - deleted
  assert:
    that:
      - result_nonet.openstack_networks == []

- name: Create network - updates
  openstack.cloud.network:
     cloud: "{{ cloud }}"
     name: "{{ network_name_updates }}"
     state: present
     shared: "{{ network_shared }}"
     external: "{{ network_external }}"
     mtu: "{{ mtu }}"
     port_security_enabled: "{{ port_security_enabled }}"
  register: result_create_nw_for_updates
  ignore_errors: true

- name: Update network - update failure
  openstack.cloud.network:
     cloud: "{{ cloud }}"
     name: "{{ network_name_updates }}"
     state: present
     shared: "{{ network_shared }}"
     external: "{{ network_external }}"
     mtu: "{{ mtu }}"
     port_security_enabled: "{{ port_security_enabled }}"
     # You cannot update this property.
     provider_physical_network: cannot_be_updated
  register: result_nw_update_failure
  ignore_errors: true

- name: Verify networks info - update fail
  assert:
    that:
      - result_nw_update_failure is failed

- name: Update network - update success
  openstack.cloud.network:
     cloud: "{{ cloud }}"
     name: "{{ network_name_updates }}"
     state: present
     shared: "{{ network_shared }}"
     external: "{{ network_external }}"
     # NOTE: This property should be updated
     mtu: "{{ mtu - 50 }}"
     # NOTE: This property should be updated
     port_security_enabled: "{{ not port_security_enabled }}"
  register: result_nw_update_success
  ignore_errors: true

- name: Gather networks info - updates
  openstack.cloud.networks_info:
     cloud: "{{ cloud }}"
     name: "{{ network_name_updates }}"
  register: result_network_updates_info

- name: Verify networks info - update success
  assert:
    that:
      - result_nw_update_success is changed
      - result_network_updates_info.networks.0.name == network_name_updates
      - result_network_updates_info.networks.0.mtu == mtu - 50
      - result_network_updates_info.networks.0['is_port_security_enabled'] == (not port_security_enabled)

- name: Delete network - updates
  openstack.cloud.network:
     cloud: "{{ cloud }}"
     name: "{{ network_name_updates }}"
     state: absent
  ignore_errors: true
